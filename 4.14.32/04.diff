commit a2e0ad91a967cb3eb5abe644f40cc4c2f9a3dd0a
Author: Alexander K <ak@natsys-lab.com>
Date:   Wed Jul 11 01:23:09 2018 +0300

    Call TLS encryption for min(cwnd,rwnd)

diff --git a/include/net/sock.h b/include/net/sock.h
index b914e197..4b990fe9 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -473,7 +473,8 @@ struct sock {
 	void			(*sk_write_space)(struct sock *sk);
 #ifdef CONFIG_SECURITY_TEMPESTA
 	int			(*sk_write_xmit)(struct sock *sk,
-						 struct sk_buff *skb);
+						 struct sk_buff *skb,
+						 unsigned int limit);
 #endif
 	void			(*sk_error_report)(struct sock *sk);
 	int			(*sk_backlog_rcv)(struct sock *sk,
diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c
index 3d6ced43..0eecab7c 100644
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -2327,6 +2327,12 @@ static bool tcp_write_xmit(struct sock *sk, unsigned int mss_now, int nonagle,
 		}
 
 		limit = mss_now;
+		if (tso_segs > 1 && !tcp_urg_mode(tp))
+			limit = tcp_mss_split_point(sk, skb, mss_now,
+						    min_t(unsigned int,
+							  cwnd_quota,
+							  max_segs),
+						    nonagle);
 #ifdef CONFIG_SECURITY_TEMPESTA
 		if (sk->sk_write_xmit && tempesta_tls_skb_type(skb)) {
 			if (unlikely(limit <= TLS_MAX_OVERHEAD)) {
@@ -2341,13 +2347,6 @@ static bool tcp_write_xmit(struct sock *sk, unsigned int mss_now, int nonagle,
 				limit = TLS_MAX_PAYLOAD_SIZE;
 		}
 #endif
-		if (tso_segs > 1 && !tcp_urg_mode(tp))
-			limit = tcp_mss_split_point(sk, skb, mss_now,
-						    min_t(unsigned int,
-							  cwnd_quota,
-							  max_segs),
-						    nonagle);
-
 		if (skb->len > limit &&
 		    unlikely(tso_fragment(sk, skb, limit, mss_now, gfp)))
 			break;
@@ -2370,9 +2369,10 @@ static bool tcp_write_xmit(struct sock *sk, unsigned int mss_now, int nonagle,
 		 * get 16KB (maximum size of TLS message).
 		 */
 		if (sk->sk_write_xmit && tempesta_tls_skb_type(skb))
-			if (unlikely(sk->sk_write_xmit(sk, skb)))
+			if (unlikely(sk->sk_write_xmit(sk, skb, limit)))
 				break;
 #endif
+		pr_err("AK_DBG %s: skb=%pK len=%u\n", __func__, skb, skb->len);
 		if (unlikely(tcp_transmit_skb(sk, skb, 1, gfp)))
 			break;
 
